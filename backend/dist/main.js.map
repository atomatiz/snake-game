{"version":3,"file":"main.js","sourceRoot":"/","sources":["main.ts"],"names":[],"mappings":";;AAAA,sDAAsD;AACtD,2CAAwD;AACxD,2CAA+C;AAC/C,uCAA2C;AAC3C,6CAAiE;AACjE,6CAAyC;AAGzC,KAAK,UAAU,SAAS;IACpB,MAAM,MAAM,GAAW,IAAI,eAAM,EAAE,CAAC;IACpC,MAAM,GAAG,GAAG,MAAM,kBAAW,CAAC,MAAM,CAAyB,sBAAS,EAAE;QACpE,MAAM,EAAE,MAAM;KACjB,CAAC,CAAC;IAEH,MAAM,aAAa,GAAG,GAAG,CAAC,GAAG,CAAC,sBAAa,CAAC,CAAC;IAE7C,GAAG,CAAC,eAAe,CAAC,mBAAU,CAAC,CAAC;IAEhC,GAAG,CAAC,cAAc,CACd,IAAI,uBAAc,CAAC;QACf,SAAS,EAAE,IAAI;QACf,SAAS,EAAE,IAAI;QACf,oBAAoB,EAAE,IAAI;KAC7B,CAAC,CACL,CAAC;IAEF,GAAG,CAAC,UAAU,CAAC;QACX,MAAM,EAAE,CAAC,GAAG,aAAa,CAAC,GAAG,CAAC,uBAAuB,CAAC,EAAE,CAAC;QACzD,OAAO,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC;QAC5B,cAAc,EAAE,CAAC,cAAc,EAAE,eAAe,EAAE,QAAQ,CAAC;QAC3D,WAAW,EAAE,IAAI;KACpB,CAAC,CAAC;IAEH,MAAM,QAAQ,GAAG,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC/C,MAAM,OAAO,GAAG,CAAC,aAAa,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;IAEnD,IAAI,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;QAC7B,MAAM,YAAY,GAAG,IAAI,yBAAe,EAAE;aACrC,QAAQ,CAAC,gBAAgB,CAAC;aAC1B,cAAc,CAAC,wBAAwB,CAAC;aACxC,UAAU,CAAC,KAAK,CAAC;aACjB,MAAM,CAAC,YAAY,CAAC;aACpB,KAAK,EAAE,CAAC;QACb,MAAM,QAAQ,GAAG,uBAAa,CAAC,cAAc,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;QACjE,uBAAa,CAAC,KAAK,CAAC,WAAW,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;IACpD,CAAC;IACD,MAAM,IAAI,GAAW,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;IACvD,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE;QAC9B,MAAM,CAAC,GAAG,CACN,gCAAgC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,aAAa,cAAc,MAAM,GAAG,CAAC,MAAM,EAAE,EAAE,CACnH,CAAC;IACN,CAAC,CAAC,CAAC;AACP,CAAC;AACD,SAAS,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;IACtB,OAAO,CAAC,KAAK,CAAC,8BAA8B,EAAE,GAAG,CAAC,CAAC;IACnD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC","sourcesContent":["import { API_PREFIX } from '@common/constants/global';\nimport { Logger, ValidationPipe } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { NestFactory } from '@nestjs/core';\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\nimport { AppModule } from './app.module';\nimport { NestExpressApplication } from '@nestjs/platform-express';\n\nasync function bootstrap() {\n    const logger: Logger = new Logger();\n    const app = await NestFactory.create<NestExpressApplication>(AppModule, {\n        logger: logger,\n    });\n\n    const configService = app.get(ConfigService);\n\n    app.setGlobalPrefix(API_PREFIX);\n\n    app.useGlobalPipes(\n        new ValidationPipe({\n            transform: true,\n            whitelist: true,\n            forbidNonWhitelisted: true,\n        }),\n    );\n\n    app.enableCors({\n        origin: [`${configService.get('SNACK_GAME_CLIENT_URL')}`],\n        methods: ['POST', 'OPTIONS'],\n        allowedHeaders: ['Content-Type', 'Authorization', 'Accept'],\n        credentials: true,\n    });\n\n    const NODE_ENV = configService.get('NODE_ENV');\n    const devEnvs = ['development', 'test', 'staging'];\n\n    if (devEnvs.includes(NODE_ENV)) {\n        const apiDocConfig = new DocumentBuilder()\n            .setTitle('Snake Game API')\n            .setDescription('API for the Snake Game')\n            .setVersion('1.0')\n            .addTag('Snack Game')\n            .build();\n        const document = SwaggerModule.createDocument(app, apiDocConfig);\n        SwaggerModule.setup(`/api-docs`, app, document);\n    }\n    const port: number = configService.get('PORT') || 3001;\n    await app.listen(port, async () => {\n        logger.log(\n            `Application is running -mode ${configService.get('NODE_ENV') || 'development'} -endpoint ${await app.getUrl()}`,\n        );\n    });\n}\nbootstrap().catch((err) => {\n    console.error('Failed to start application:', err);\n    process.exit(1);\n});\n"]}