{"version":3,"file":"main.js","sourceRoot":"/","sources":["main.ts"],"names":[],"mappings":";;AAAA,sDAAsD;AACtD,2CAAwC;AACxC,2CAA+C;AAC/C,uCAA2C;AAC3C,6CAAiE;AACjE,6CAAyC;AAEzC,KAAK,UAAU,SAAS;IACpB,MAAM,MAAM,GAAW,IAAI,eAAM,EAAE,CAAC;IACpC,MAAM,GAAG,GAAG,MAAM,kBAAW,CAAC,MAAM,CAAC,sBAAS,EAAE;QAC5C,MAAM,EAAE,MAAM;KACjB,CAAC,CAAC;IAEH,MAAM,aAAa,GAAG,GAAG,CAAC,GAAG,CAAC,sBAAa,CAAC,CAAC;IAC7C,GAAG,CAAC,eAAe,CAAC,mBAAU,CAAC,CAAC;IAChC,GAAG,CAAC,UAAU,CAAC;QACX,MAAM,EAAE,GAAG,aAAa,CAAC,GAAG,CAAC,uBAAuB,CAAC,EAAE;QACvD,OAAO,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC;QACxB,WAAW,EAAE,IAAI;QACjB,cAAc,EAAE,CAAC,cAAc,EAAE,eAAe,EAAE,QAAQ,CAAC;KAC9D,CAAC,CAAC;IAEH,MAAM,YAAY,GAAG,IAAI,yBAAe,EAAE;SACrC,QAAQ,CAAC,gBAAgB,CAAC;SAC1B,cAAc,CAAC,wBAAwB,CAAC;SACxC,UAAU,CAAC,KAAK,CAAC;SACjB,KAAK,EAAE,CAAC;IACb,MAAM,QAAQ,GAAG,uBAAa,CAAC,cAAc,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;IACjE,uBAAa,CAAC,KAAK,CAAC,GAAG,mBAAU,WAAW,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;IAE7D,MAAM,IAAI,GAAW,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;IACvD,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE;QAC9B,MAAM,CAAC,GAAG,CACN,gCAAgC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,aAAa,cAAc,MAAM,GAAG,CAAC,MAAM,EAAE,EAAE,CACnH,CAAC;IACN,CAAC,CAAC,CAAC;AACP,CAAC;AACD,SAAS,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;IACtB,OAAO,CAAC,KAAK,CAAC,8BAA8B,EAAE,GAAG,CAAC,CAAC;IACnD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC","sourcesContent":["import { API_PREFIX } from '@common/constants/global';\nimport { Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { NestFactory } from '@nestjs/core';\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\nimport { AppModule } from './app.module';\n\nasync function bootstrap() {\n    const logger: Logger = new Logger();\n    const app = await NestFactory.create(AppModule, {\n        logger: logger,\n    });\n\n    const configService = app.get(ConfigService);\n    app.setGlobalPrefix(API_PREFIX);\n    app.enableCors({\n        origin: `${configService.get('SNAKE_GAME_CLIENT_URL')}`,\n        methods: ['GET', 'POST'],\n        credentials: true,\n        allowedHeaders: ['Content-Type', 'Authorization', 'Accept'],\n    });\n\n    const apiDocConfig = new DocumentBuilder()\n        .setTitle('Snake Game API')\n        .setDescription('API for the Snake Game')\n        .setVersion('1.0')\n        .build();\n    const document = SwaggerModule.createDocument(app, apiDocConfig);\n    SwaggerModule.setup(`${API_PREFIX}/api-docs`, app, document);\n\n    const port: number = configService.get('PORT') || 3001;\n    await app.listen(port, async () => {\n        logger.log(\n            `Application is running -mode ${configService.get('NODE_ENV') || 'development'} -endpoint ${await app.getUrl()}`,\n        );\n    });\n}\nbootstrap().catch((err) => {\n    console.error('Failed to start application:', err);\n    process.exit(1);\n});\n"]}