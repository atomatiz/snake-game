{"version":3,"file":"game.controller.js","sourceRoot":"/","sources":["game/game.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,2CAMwB;AACxB,6CAAqE;AAErE,iDAA6C;AAKtC,IAAM,cAAc,GAApB,MAAM,cAAc;IACM;IAA7B,YAA6B,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAMzD,SAAS,CAAS,IAAc;QAC5B,IAAI,CAAC;YACD,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAC3D,CAAC;QAAC,OAAO,KAAc,EAAE,CAAC;YACtB,MAAM,IAAI,sBAAa,CACnB,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAC3C,mBAAU,CAAC,WAAW,CACzB,CAAC;QACN,CAAC;IACL,CAAC;IAKD,IAAI,CAAS,IAAa;QACtB,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACjD,CAAC;CACJ,CAAA;AAxBY,wCAAc;AAOvB;IAJC,IAAA,aAAI,EAAC,OAAO,CAAC;IACb,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,4CAA4C,EAAE,CAAC;IACvE,IAAA,qBAAW,EAAC,EAAE,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,2BAA2B,EAAE,CAAC;IACtE,IAAA,qBAAW,EAAC,EAAE,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,oBAAoB,EAAE,CAAC;IACrD,WAAA,IAAA,aAAI,GAAE,CAAA;;;;+CAShB;AAKD;IAHC,IAAA,aAAI,EAAC,MAAM,CAAC;IACZ,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,2CAA2C,EAAE,CAAC;IACtE,IAAA,qBAAW,EAAC,EAAE,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,4BAA4B,EAAE,CAAC;IAClE,WAAA,IAAA,aAAI,GAAE,CAAA;;;;0CAEX;yBAvBQ,cAAc;IAF1B,IAAA,iBAAO,EAAC,MAAM,CAAC;IACf,IAAA,mBAAU,EAAC,MAAM,CAAC;qCAE2B,0BAAW;GAD5C,cAAc,CAwB1B","sourcesContent":["import {\n    Controller,\n    Post,\n    Body,\n    HttpException,\n    HttpStatus,\n} from '@nestjs/common';\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\nimport { StartDto, MoveDto } from './dtos';\nimport { GameService } from './game.service';\nimport { GameResponse } from './types';\n\n@ApiTags('Game')\n@Controller('game')\nexport class GameController {\n    constructor(private readonly gameService: GameService) {}\n\n    @Post('start')\n    @ApiOperation({ summary: 'Start a new game with specified dimensions' })\n    @ApiResponse({ status: 200, description: 'Game started successfully' })\n    @ApiResponse({ status: 400, description: 'Invalid dimensions' })\n    startGame(@Body() body: StartDto): GameResponse {\n        try {\n            return this.gameService.start(body.width, body.height);\n        } catch (error: unknown) {\n            throw new HttpException(\n                error instanceof Error ? error.message : '',\n                HttpStatus.BAD_REQUEST,\n            );\n        }\n    }\n\n    @Post('move')\n    @ApiOperation({ summary: 'Move the snake in the specified direction' })\n    @ApiResponse({ status: 200, description: 'Move executed successfully' })\n    move(@Body() body: MoveDto): GameResponse {\n        return this.gameService.move(body.direction);\n    }\n}\n"]}